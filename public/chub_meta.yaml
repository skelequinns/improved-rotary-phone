# ============================================================================
# SLOW BURN ROMANCE STAGE - CONFIGURATION
# ============================================================================
# This file defines the metadata and configuration schema for the stage.

# The name of the stage
project_name: "Slow Burn Romance"

# A short tagline to show in search
tagline: "Progressive romance system with in-chat configuration"

# Visibility: 'PUBLIC', 'PRIVATE', or 'UNLISTED'
visibility: 'PUBLIC'

# Display position: 'ADJACENT' | 'NONE' | 'COVER' | 'FULLSCREEN'
position: 'ADJACENT'

# Tags for discovery
tags:
  - 'Romance'
  - 'Progression'
  - 'Relationship'
  - 'Slow Burn'
  - 'Character Development'
  - 'Affection System'
  - 'Configurable'

# ============================================================================
# USER CONFIGURATION SCHEMA (System-level only)
# ============================================================================
# Archetype and pacing are now set via in-chat commands

config_schema:
  type: object
  required: []
  properties:

    # Enable Regression - can affection decrease?
    enableRegression:
      type: boolean
      title: "Enable Regression"
      description: "If enabled, negative behaviors (rudeness, pushing boundaries) cause affection loss. If disabled, affection can only increase."
      default: true

    # Show Progress UI - display the relationship status sidebar
    showProgressUI:
      type: boolean
      title: "Show Progress UI"
      description: "Display the relationship status sidebar showing affection, stage, and unlocked content."
      default: true

    # Verbose Logging - detailed console logs for debugging
    verboseLogging:
      type: boolean
      title: "Verbose Logging"
      description: "Enable detailed console logging for debugging and development. Turn off for production."
      default: false

# ============================================================================
# STATE SCHEMAS
# ============================================================================

state_schema:
  # Init state - set once at chat creation
  init:
    type: object
    properties:
      proceduralSeed:
        type: string
      chatCreatedAt:
        type: integer

  # Message state - NOW includes archetype and pacing (user-configurable via commands)
  message:
    type: object
    properties:
      # User-configurable via in-chat commands
      characterArchetype:
        type: string
        enum: ["tsundere", "shy", "confident", "guarded"]
        description: "Character archetype (configurable via ((set archetype)) command)"
      pacingSpeed:
        type: string
        enum: ["glacial", "slow", "moderate", "fast"]
        description: "Progression pacing (configurable via ((set pacing)) command)"

      # Progression tracking
      affection:
        type: integer
        minimum: 0
        maximum: 250
      relationshipStage:
        type: string
        enum:
          - "strangers"
          - "acquaintances"
          - "friends"
          - "good_friends"
          - "close_friends"
          - "romantic_tension"
          - "romance"
      interactionCount:
        type: integer
      lastInteractionTime:
        type: integer
      emotionalTone:
        type: string
      currentMood:
        type: string
      flags:
        type: object
        properties:
          firstCompliment:
            type: boolean
          sharedVulnerability:
            type: boolean
          hadArgument:
            type: boolean
          metFriends:
            type: boolean
          firstDateAttempt:
            type: boolean
          confessedFeelings:
            type: boolean
          firstPhysicalContact:
            type: boolean
      discussedTopics:
        type: array
        items:
          type: string
      recentConversationSummary:
        type: array
        items:
          type: string
      sessionStartTime:
        type: integer
      messagesThisSession:
        type: integer

  # Chat state - persists across all branches/swipes
  chat:
    type: object
    properties:
      permanentlyUnlockedTopics:
        type: array
        items:
          type: string
      significantEvents:
        type: array
        items:
          type: object
          properties:
            event:
              type: string
            timestamp:
              type: integer
            affectionAtTime:
              type: integer
      characterGrowthLevel:
        type: integer
        minimum: 0
        maximum: 100
      peakAffection:
        type: integer
        minimum: 0
        maximum: 250

# Whether to publish anonymously
is_anonymous: false

# Disable ratings/reviews
ratings_disabled: false

# This is here for future cases where ex. you need user secrets,
#    but currently does nothing.
# permissions:

# extension_id is automatically generated on push with a new project;
#    you should not make or set this value.
# github_path will be added if it does not exist. It is the URL of the repo.
